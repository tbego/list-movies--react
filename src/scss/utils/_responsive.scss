// responsive
// --------
// This file includes a set of mixins designed for responsive building.
//

// Breakpoints
// -----------
// **palm** starts at `320px` and ends at `767px`.
$palm-start:      	320px!default;
$palm-end:        	767px!default;

// **lap** starts at `768px` and ends at `1024px`.
$lap-start:       	768px!default;
$lap-end:         	1024px!default;

// **desk** starts at `1025px`.
$desk-start:      	1025px!default;
$desk-wide-start: 	1400px!default;

// font-family breakpoint
@mixin breakpoint($str) {
	html {
		font-family: $str;
	}
}

// media-query
@mixin media-query($media-query) {
	@if $media-query == palm {
		@media only screen and (min-width: $palm-start) and (max-width: $palm-end) {
			@content;
		}
	}
	@if $media-query == palm-pt {
		@media only screen and (min-width: $palm-start) and (max-width: $palm-end) and (orientation: portrait) {
			@content;
		}
	}
	@if $media-query == palm-ld {
		@media only screen and (min-width: $palm-start) and (max-width: $palm-end) and (orientation: landscape) {
			@content;
		}
	}
	@if $media-query == lap {
		@media only screen and (min-width: $lap-start) and (max-width: $lap-end) {
			@content;
		}
	}
	@if $media-query == lap-pt {
		@media only screen and (min-width: $lap-start) and (max-width: $lap-end) and (orientation: portrait) {
			@content;
		}
	}
	@if $media-query == lap-ld {
		@media only screen and (min-width: $lap-start) and (max-width: $lap-end) and (orientation: landscape) {
			@content;
		}
	}
	@if $media-query == device {
		@media only screen and (max-width: $lap-end) {
			@content;
		}
	}
	@if $media-query == desk {
		@media only screen and (min-width: $desk-start) {
			@content;
		}
	}
	@if $media-query == desk-wide {
		@media only screen and (min-width: $desk-wide-start) {
			@content;
		}
	}
}

// set up breakpoint font-family
@include media-query(palm){
    @include breakpoint("palm");
}

@include media-query(palm-pt){
    @include breakpoint("palm-pt");
}

@include media-query(palm-ld){
    @include breakpoint("palm-ld");
}

@include media-query(lap){
    @include breakpoint("lap");
}

@include media-query(lap-pt){
    @include breakpoint("lap-pt");
}

@include media-query(lap-ld){
    @include breakpoint("lap-ld");
}

@include media-query(desk){
    @include breakpoint("desk");
}

@include media-query(desk-wide){
    @include breakpoint("desk-wide");
}

// grid extends
// the standard grid uses inline-block elements and a font-size hack to remove whitespace
// the flex grid uses flexbox, is set to wrap and row by default, no font-size hack

// grid silent extend
// extend on grid elements
%grid {
    box-sizing:border-box;
    font-size: 0;
    list-style:none;
    margin:0;
    padding:0;
}

// flexbox grid silent extend
// extend on grid elements
// check for scope, won't work on IE<10
%flexgrid {
    box-sizing:border-box;
    display: flex;
    flex-flow: row wrap;
    list-style:none;
    margin:0;
    padding:0;
}

// grid-item silent extend
// extend on grid-items elements
%grid-item {
    box-sizing:border-box;
    display:inline-block;
    font-size: initial;
    margin:0;
    padding:0;
    vertical-align:top;
    width:100%;
}

// widths

// 100%		1,1
// 91.666%	11,12
// 90%		9,10
// 88.888%	8,9
// 87.5%	7,8
// 85.7%	6,7
// 83.333%	5,6 / 10,12
// 80%		4,5 / 8,10
// 77.777%	7,9
// 75%		3,4 / 6,8 / 9,12
// 71.425%	5,7
// 70%		7,10
// 66.666%	2,3 / 4,6 / 6,9 / 8,12
// 62.5%	5,8
// 60%		3,5 / 6,10
// 58.333%	7,12
// 57.14%	4,7
// 55.555%	5,9
// 50%		1,2 / 2,4 / 3,6 / 4,8 / 5,10 / 6,12
// 44.444%	4,9
// 42.855%	3,7
// 41.666%	5,12
// 40%		2,5
// 37.5%	3,8
// 33.333%	1,3 / 2,6 / 3,9 / 4,12
// 30%		3,10
// 28.55%	2,7
// 25%		1,4 / 2,8 / 3,12
// 22.222%	2,9
// 20%		1,5 / 2,10
// 16.666%	1,6 / 2,12
// 14.285%	1,7
// 12.5%	1,8
// 11.111%	1,9
// 10%		1,10
// 8.333%	1,12

// grid mixin
//
// use :
// .maclasse {
// 		@extend %grid;
// 		.montiem {
// 			@extend %grid-item;
// 		}
// 		.monitem:nth-child(1) {
// 			@include griditem(desk, 1, 6);
// 			@include griditem(lap, 3, 6);
// 			100%
// 		}
// 		...
// }
@mixin griditem($break, $size, $max) {
    @include media-query($break) {
        width: ($size/$max) * 100%;
    }
}
